1. Which classes are aggregates of other classes?
=> Cart is aggregate of Media. Store is aggregate of Media. CompactDisc is aggregate of Track

2. When overriding the equals() method of the Object class, you will have to cast the Object parameter obj to the type of
Object that you are dealing with. For example, in the Media class, you must cast the Object obj to a Media, and then check the
equality of the two objectsâ€™ attributes as the above requirements (i.e. title for Media; title and length for Track). If the
passing object is not an instance of Media, what happens?
=> If the passing object is not an instance of Media, equals() returns false.

3.- Create an ArrayList of Media, then add some media (CD, DVD or Book) into the list.
  - Iterate through the list and print out the information of the media by using toString() method. Observe
  what happens and explain in detail.
=> When calling toString(), depending on the type of media, corresponding toString() will be performed because Book,
CompactDisc and DigitalVideoDisc inherit Media , Objects Book , CompactDisc, DigitalVideoDisc are also instances of Media.

4. What class should implement the Comparable interface?
=> Class Media implements Comparable interface

5.In those classes, how should you implement the compareTo()method be to reflect the ordering that we want?
=> The compareTo() method needs to return a negative integer, zero, or a positive integer if the current object is less than,
equal to, or greater than the specified object, respectively.

6. Can we have two ordering rules of the item (by title then cost and by cost then title) if we use this Comparable interface
 approach?
=> No because Comparable interface is used for internal comparison and can be implemented only once by class Media.

7.Suppose the DVDs has a different ordering rule from the other media types, that is by title, then decreasing length, then
cost. How would you modify your code to allow this?
=> I override compareTo() method in DigitalVideoDisc.